from random import randint
weapons = {"Руки": [8, 0, "Руки как руки, тумаков надавать можно."],
           "Тупой кинжал": [12, 55, "Тупой, но колоться пойдет."],
           "Дубинка шипами": [13, 50, "Увесистая такая дубинка из крепкого дерева, тумаков надавать в самый раз."],
           "Короткий меч": [14, 31, "Немного ржавый меч, но все же меч."],
           "Топор дровосека": [14, 30, "Можно рубить деревья, а можно конечности врагов, ну и тумаков надавать."],
           "Булава": [15, 25, "Серьезное оружие. Можно надавать очень серьезных тумаков."],
           "Длинный меч": [16, 19, "Длинный острый меч, шутки кончились."],
           "Боевой топор": [17, 9, "Топор внушительных размеров, таким можно зарубить быка."],
           "Секира короля гоблинов": [20, 4, "Опасное и редкое оружие, когда-то король гоблинов 'Бабиус Третий', зарубил им собаку, а вообще мог бы и медведя."]
           }
armors = {"Рваная рубаха": [5, 0, "Ваша рубаха, достаточно плохая защита от тумаков."],
          "Стеганная телогрейка": [8, 55, "Хорошая защита от холода, не особо хорошо помогает от тумаков."],
          "Стеганный ватник": [10, 50, "Хорошая защита от логики и здравого смысла, так себе помогает от тумаков."],
          "Кожанка": [15, 31, "Модная курточка из плотной кожи, кое-как помогает от тумаков."],
          "Кольчуга": [20, 30, "Хорошая защита от тумаков."],
          "Пластинчатая броня": [25, 25, "Тяжелая и прочная броня, от тумаков отлично защищает."],
          "Кристаллический доспех": [30, 19, "Броня из сверхпрочного кристалла, тумаки только щекочут."],
          "Броня из шкуры дракона": [35, 9, "Волшебная броня, тумаки не пройдут!."],
          "Броня из шкуры Золотого дракона": [45, 4, "Легендарная броня из шкуры редчайшего дракона, почти полный иммунитет к тумакам."]
          }
amulets = {"Амулет Здоровья":[10, 5, "Увеличивает ваше здоровье"],
           "Амулет Защиты":[10, 5, "Защишает от тумаков"],
           "Амулет Берсерка":[5, 5, "Добавляет силы вам и вашим ударам"],
           "Странный амулет":[5, 5, "Загадочный амулет"]}
class Goblin:
    """Класс для гоблинца"""
    a = randint(0,5)
    d1 = {0 : "враждебно", 2 : "кровожадно", 3 : "агрессивно", 4 : "мягко говоря недружелюбно", 5 : "дружелюбно"}
    d2 = {0: "грозно запыхтел увидев вас.", 2: "стал бить себя кулаком в пах, как только вас заметил.", 3:
        "принялся вращать налитыми кровью глазами, завидев вас издалека.", 4: "принялся приседать, делая вид,"
        "что готов бросить в вас нечистоты.", 5: "улыбнулся и подмигнул вам."}
    d3 = {0: "подумали, а что если он пыхтел, просто из-за того что занимался спортом, когда вы его застали.",
          2: "увидели, что он бил себя кулаком, потому что был возбужден, и хотел заняться с вами любовью.",
          3: "заметили, что глаза у него не были налиты кровью, а он просто\nносил очки красного цвета. Что же вы наделали?",
          4: "обратили внимание, что он хотел бросить в вас не нечистоты, а волшебный порошок.\n Заинтересовавшись вы "
             "понюхали порошок и умерли",
          5: "осознали, что вы нехороший человек"}
    d4 = {0: "", 2: "", 3: "", 4: "", 5: ""}

    def __init__(self, name, sex, hp, atitude=a):
        """Задаем имя, пол, кол-во хп"""
        self.name = name
        self.sex = sex
        self.hp = hp
    def __str__(self):
        return f"Гоблинц по имени - {self.name}"

    def get_name(self):
        """Функция возвращает Имя"""
        return self.name

    def get_sex(self):
        """Функция возвращает Пол"""
        return self.sex

    def get_age(self):
        """Функция возвращает HP"""
        return self.hp

    def fight1(self):
        count = 0
        p = 0
        print(
            f"Вам встретился {self.name}, он настроен {self.d1[self.a]} по отношению к вам,\n"
            f"вы это поняли, глядя как он {self.d2[self.a]}.\n")
        while self.hp > 0 and p != 1:
            p_hit = int(input("Насколько сильно ударить?  Напишите число: \n"
                              "1. Врезать со всей силы\n2. Сильно\n3. Дать пощечину\n"))
            if p_hit == 1:
                p_hit = 10
                self.hp = self.hp - p_hit
                if self.hp > 0:
                    print(f"Вы ударили {self.name}, доставили ему {p_hit} урона и у него осталось {self.hp}")
                else:
                    print("О да!")
            elif p_hit == 2:
                p_hit = 5
                self.hp = self.hp - p_hit
                if self.hp > 0:
                    print(f"Вы ударили {self.name}, доставили ему {p_hit} урона и у него осталось {self.hp}")
                else:
                    print("О да!")
            elif p_hit == 3:
                print("Вы только разозлили гоблинца еще больше")
                count += 1
                if count == 2:
                    print(f"{self.name} разозлился так сильно, что убил вас")
                    p = 1
        if p == 0:
            print(
                f"Вы убили {self.name}, мать вашу! А потом {self.d3[self.a]}")
        else:
            print("Вы умерле жидко пукнув")
class Player:
    """Класс для Игрока"""
    def __init__(self, name, raw_str, raw_int, luck = 0 , armor = ["Брюки", 2], weapon = ["Руки", 1], scrols = 0, potion = 0, raw_hp = 30):
        """Задаем имя, пол, кол-во хп"""
        self.dmg_coefficient = 1
        self.a = randint(0, 5)
        self.name = name #имя игрока
        self.hp = raw_hp
        self.str = raw_str
        self.int = raw_int
        self.dmg = weapon[1] * self.dmg_coefficient
        self.potion = potion #кол-во зелий
        self.armor_pt = armor[1] #защита брони
        self.inventar = {"Свитки" : 0, "Зелья" : 0}
        self.wear = armor[0] #какая броня
        self.weapon = weapon[0] #какое оружие
        self.scrols = scrols
    def get_name(self):
        """Функция возвращает Имя"""
        return self.name
    def show_chr(self):
        """Функция печатает описание"""
        print(f"Вас зовут: {self.name}, кол-во ваших очков здоровья: {self.hp}, на вас ваш доспех: {self.wear},\n"
              f"Ваше основное оружие: {self.weapon}, содержимое вашей сумки: Свитки: {self.inventar['Свитки']}, Зелья:{self.inventar['Зелья']}")
    def get_sex(self):
        """Функция возвращает Пол"""
        return self.sex
    def get_age(self):
        """Функция возвращает HP"""
        return self.hp
    def inventar_use(self):
        """Функция позволяет использовать предмет из инвентаря"""
        if {self.inventar["Свитки"]} != 0 and self.inventar["Зелья"] != 0:
            print(f"У вас в сумке: cвитки - {self.inventar['Свитки']}, зелья - {self.inventar['Зелья']}, что хотите использовать?")
            c1 = int(input("Введите 1 - для свитка, 2 - для зелья, 3 - если передумали: "))
            if c1 == 1:
                self.inventar["Свитки"] -= 1
                return 1 # нанести 20 урона врагу
            elif c1 == 2:
                self.hp += 20 # вылечить 20 хп
                self.inventar["Зелья"] -= 1
                print(f"Вы подлечились, и теперь у вас {self.hp} здоровья")
            else:
                pass
        elif {self.inventar["Свитки"]} == 0 and self.inventar["Зелья"] != 0:
            print(f"У вас в сумке: cвитков нет, зелья - {self.inventar['Зелья']}, хотите выпить зелье?")
            c1 = int(input("Введите 1 - если да, 2 если нет: "))
            if c1 == 1:
                self.hp += 20 # вылечить 20 хп
                self.inventar["Зелья"] -= 1
                print(f"Вы подлечились, и теперь у вас {self.hp} здоровья")
            elif c1 == 2:
                pass
        elif {self.inventar["Свитки"]} != 0 and self.inventar["Зелья"] == 0:
            print(f"У вас в сумке: зелий нет, свитки - {self.inventar['Свитки']}, хотите прочитать свиток?")
            c1 = int(input("Введите 1 - если да, 2 если нет: "))
            if c1 == 1:
                self.inventar["Свитки"] -= 1
                return 1 # нанести 20 урона врагу
            elif c1 == 2:
                pass
        else:
            print(f"Извини {self.name}, но сумка пуста, ничего нет, совсем ничего")
    def add_scroll(self, scr = 1):
        move_1 = int(input("На стене, в щелке между камнями, вы заметили какую то рваную бумажку. Взять?\n1. Да\n2. Кто-то бычок засунул... нет.\n"))
        if move_1 == 1:
            self.inventar["Свитки"] += scr
            print(f"Никакой не бычок, а настоящий магический свиток, теперь у вас их {self.inventar['Зелья']}")
        elif move_1 == 2:
            print("Вы обошли стороной странную бумажку")
            pass
    def add_potion(self, pot = 1):
        move_1 = int(input("Вы заметили в грязи бутылочку с зельем. Взять?\n1. Да\n2. Мусор какой то... нет.\n"))
        if move_1 == 1:
            self.inventar["Зелья"] += pot
            print(f"Это и в прямь оказалась бутылочка с зельем здоровья, теперь у вас их {self.inventar['Зелья']}")
        elif move_1 == 2:
            print("Вы осорожно обошли подозрительный флакон и пошли дальше")
            pass
class Chest():
    """Класс сундук"""
    def __init__(self):
        self.content = {}
        self.ran_wp = randint(1, 100)
        self.ran_ar = randint(1, 100)
        self.ran_am = randint(1, 100)
    def opening_chest(self):
        """Логика дропа из сундука"""
        print("Вы открываете сундук и внутри находите:")
        weapon_drop = {}
        armor_drop = {}
        amulet_drop = {}
        if randint(1, 2) == 1: #добавляем в сундук зелья, чем больше, тем меньше шанс
            if randint(1, 2) == 1:
                self.content["Зелья"] = 1
            elif randint(1, 3) == 2:
                self.content["Зелья"] = 2
            elif randint(1, 8) == 5:
                self.content["Зелья"] = 3
        else:
            pass
        if randint(1, 2) == 1: #добавляем в сундук свитки, чем больше, тем меньше шанс
            if randint(1, 2) == 1:
                self.content["Свитки"] = 1
            elif randint(1, 4) == 2:
                self.content["Свитки"] = 2
            elif randint(1, 10) == 5:
                self.content["Свитки"] = 3
        for i in weapons.keys(): #добавляем в оружие, чем круче, тем меньше шанс
            if weapons[i][1] >= self.ran_wp:
                weapon_drop = {}
                weapon_drop[i] = 1
        if len(list(weapon_drop)) != 0:
            container = list(weapon_drop)
            self.content[container[0]] = 1
        for i in armors.keys(): #добавляем в броню, чем круче, тем меньше шанс
            if armors[i][1] >= self.ran_ar:
                armor_drop = {}
                armor_drop[i] = 1
        if len(list(armor_drop)) != 0:
            container = list(armor_drop)
            self.content[container[0]] = 1
        for i in amulets.keys(): #добавляем амулет
            if amulets[i][1] >= self.ran_am:
                amulet_drop = {}
                amulet_drop[i] = 1
        if len(list(amulet_drop)) != 0:
            container = list(amulet_drop)
            self.content[container[0]] = 1












